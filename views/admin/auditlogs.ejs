<%- include('../components/template') %>
<main id="content" class="p-6">
  <section class="bg-neutral-900/70 border border-white/10 rounded-2xl p-6 shadow-xl">
    <header class="mb-6">
      <h1 class="text-2xl font-bold text-white"><%= req.translations.auditLogs %></h1>
      <p class="text-sm text-neutral-400 mt-1"><%= req.translations.auditLogsText %></p>
    </header>

    <div class="flex flex-wrap gap-4 mb-6">
      <!-- Action Filter -->
      <div class="flex items-center gap-2">
        <label for="actionFilter" class="text-sm text-white">Filter by Action:</label>
        <select id="actionFilter" class="bg-neutral-800 border border-white/10 text-white text-sm rounded-xl px-3 py-2 focus:outline-none">
          <option value="">All Actions</option>
          <% const actions = [...new Set(audits.map(audit => audit.action))]; %>
          <% actions.forEach(action => { %>
            <option value="<%= action %>"><%= action %></option>
          <% }); %>
        </select>
      </div>

      <!-- Date Range Filter -->
      <div class="flex items-center gap-2">
        <label for="dateRange" class="text-sm text-white">Date Range:</label>
        <select id="dateRange" class="bg-neutral-800 border border-white/10 text-white text-sm rounded-xl px-3 py-2 focus:outline-none">
          <option value="2">Last 2 Days</option>
          <option value="7">Last Week</option>
          <option value="30">Last Month</option>
          <option value="">All Time</option>
        </select>
      </div>

      <!-- Sort Buttons -->
      <div class="flex items-center gap-2">
        <button id="sortAsc" class="bg-blue-600 hover:bg-blue-700 text-white text-sm px-4 py-2 rounded-xl transition">Sort Ascending</button>
        <button id="sortDesc" class="bg-blue-600 hover:bg-blue-700 text-white text-sm px-4 py-2 rounded-xl transition">Sort Descending</button>
      </div>
    </div>

    <% if (audits && audits.length > 0) { %>
      <div class="overflow-auto rounded-xl border border-white/5">
        <table id="auditTable" class="min-w-full table-auto text-sm text-white">
          <thead class="bg-neutral-800">
            <tr>
              <th class="px-6 py-3 text-left font-semibold uppercase"><%= req.translations.user %></th>
              <th class="px-6 py-3 text-left font-semibold uppercase"><%= req.translations.action %></th>
              <th class="px-6 py-3 text-left font-semibold uppercase"><%= req.translations.addressIP %></th>
              <th class="px-6 py-3 text-left font-semibold uppercase"><%= req.translations.timestamp %></th>
            </tr>
          </thead>
          <tbody id="auditBody" class="divide-y divide-white/10 bg-neutral-900">
            <% audits.forEach(function(audit) { %>
              <tr data-timestamp="<%= new Date(audit.timestamp).getTime() %>">
                <td class="px-6 py-4 whitespace-nowrap font-medium">
                  <% if (audit.userId === req.user.userId) { %>
                    <%= req.translations.you %> <span class="text-neutral-400">(<%= audit.userId %>)</span>
                  <% } else { %>
                    <%= audit.username %> <span class="text-neutral-400">(<%= audit.userId %>)</span>
                  <% } %>
                </td>
                <td class="px-6 py-4 text-neutral-300"><%= audit.action %></td>
                <td class="px-6 py-4 text-neutral-300"><%= audit.ip %></td>
                <td class="px-6 py-4 text-neutral-300"><%= new Date(audit.timestamp).toLocaleString() %></td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    <% } else { %>
      <p class="text-neutral-400 text-sm mt-4"><%= req.translations.auditLogsNotAvailable %></p>
    <% } %>
  </section>
</main>

<%- include('../components/footer') %>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const actionFilter = document.getElementById('actionFilter');
    const dateRange = document.getElementById('dateRange');
    const sortAsc = document.getElementById('sortAsc');
    const sortDesc = document.getElementById('sortDesc');
    const tableBody = document.getElementById('auditBody');
    const originalRows = Array.from(tableBody.querySelectorAll('tr'));

    function applyFilters() {
      const selectedAction = actionFilter.value;
      const selectedRange = parseInt(dateRange.value) || Infinity;
      const now = new Date().getTime();

      tableBody.innerHTML = '';
      const filteredRows = originalRows.filter(row => {
        const action = row.children[1].textContent;
        const timestamp = parseInt(row.getAttribute('data-timestamp'));
        const dateDiff = (now - timestamp) / (1000 * 60 * 60 * 24);

        return (selectedAction === '' || action === selectedAction) &&
               dateDiff <= selectedRange;
      });

      filteredRows.forEach(row => tableBody.appendChild(row));
    }

    function sortTable(ascending) {
      const rows = Array.from(tableBody.querySelectorAll('tr'));
      rows.sort((a, b) => {
        const timestampA = parseInt(a.getAttribute('data-timestamp'));
        const timestampB = parseInt(b.getAttribute('data-timestamp'));
        return ascending ? timestampA - timestampB : timestampB - timestampA;
      });

      tableBody.innerHTML = '';
      rows.forEach(row => tableBody.appendChild(row));
    }

    actionFilter.addEventListener('change', applyFilters);
    dateRange.addEventListener('change', applyFilters);
    sortAsc.addEventListener('click', () => sortTable(true));
    sortDesc.addEventListener('click', () => sortTable(false));

    applyFilters();
  });
</script>
